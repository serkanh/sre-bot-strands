# Ruff configuration for SRE Bot Strands

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "sessions",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "EM",    # flake8-errmsg
    "ICN",   # flake8-import-conventions
    "G",     # flake8-logging-format
    "PIE",   # flake8-pie
    "Q",     # flake8-quotes
    "RET",   # flake8-return
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "ERA",   # eradicate
    "PL",    # Pylint
    "RUF",   # Ruff-specific rules
]

ignore = [
    "E501",   # Line too long (handled by formatter)
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]

# Allow fix for all enabled rules (when `--fix` is provided).
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__ files
"tests/*" = ["ARG", "PLR2004", "PLC0415"]  # Allow test-specific patterns and local imports
"app/api/*.py" = ["B008"]  # Allow FastAPI Depends in function defaults
"app/api/health.py" = ["PLC0415"]  # Allow local boto3 import in health check
